plugins {
	id 'org.springframework.boot' version '2.3.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'com.silverfoxmedia'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

ext {
	set('springBootAdminVersion', "2.3.1")
	set('springCloudVersion', "Hoxton.SR9")
}

dependencies {
	// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
	compile group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.5.0'
// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-data-rest
	compile group: 'org.springdoc', name: 'springdoc-openapi-data-rest', version: '1.5.0'
// https://mvnrepository.com/artifact/org.modelmapper/modelmapper
	compile group: 'org.modelmapper', name: 'modelmapper', version: '2.3.9'
// https://mvnrepository.com/artifact/org.modelmapper.extensions/modelmapper-spring
	compile group: 'org.modelmapper.extensions', name: 'modelmapper-spring', version: '2.3.9'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'de.codecentric:spring-boot-admin-starter-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}
